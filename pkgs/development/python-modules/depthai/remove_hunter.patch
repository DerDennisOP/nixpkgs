diff --git a/CMakeLists.txt b/CMakeLists.txt
index cddfd09b..7f838670 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -4,35 +4,12 @@ cmake_minimum_required(VERSION 3.4) # For Hunter
 # PIC toolchain as we are building a shared library
 set(CMAKE_TOOLCHAIN_FILE "${CMAKE_CURRENT_LIST_DIR}/cmake/toolchain/pic.cmake" CACHE STRING "")
 
-# Build dependencies as 'Release' only by default (if not MSVC, as it requires same debug level for libraries to be linked against)
-if(NOT WIN32)
-    set(HUNTER_CONFIGURATION_TYPES "Release" CACHE STRING "Hunter dependencies list of build configurations")
-endif()
-
 # Specify path separator
 set(SYS_PATH_SEPARATOR ";")
 if(UNIX)
     set(SYS_PATH_SEPARATOR ":")
 endif()
 
-# Generate combined Hunter config
-file(READ depthai-core/cmake/Hunter/config.cmake depthai_core_hunter_config)
-file(READ cmake/Hunter/config.cmake hunter_config)
-string(CONCAT final_hunter_config ${depthai_core_hunter_config} "\n\n" ${hunter_config})
-file(WRITE ${CMAKE_CURRENT_BINARY_DIR}/generated/Hunter/config.cmake ${final_hunter_config})
-
-include("cmake/HunterGate.cmake")
-HunterGate(
-    URL "https://github.com/cpp-pm/hunter/archive/v0.23.322.tar.gz"
-    SHA1 "cb0ea1f74f4a2c49a807de34885743495fccccbe"
-    FILEPATH ${CMAKE_CURRENT_BINARY_DIR}/generated/Hunter/config.cmake # Combined config
-)
-
-# Move binary dir if windows, to shorten the path
-if(WIN32)
-    set(HUNTER_BINARY_DIR "${HUNTER_GATE_ROOT}/_bin" CACHE STRING "Hunter binary directory")
-endif()
-
 # Pybindings project
 set(TARGET_NAME depthai)
 project(depthai VERSION "0") # revision of bindings [depthai-core].[rev]
@@ -75,11 +52,6 @@ else()
     add_subdirectory(depthai-core)
 endif()
 
-
-# Add pybind11 dependency
-#add_subdirectory(pybind11-2.5.0)
-hunter_add_package(pybind11)
-
 # Disable LTO if MINGW compiler
 if(MINGW)
     set(PYBIND11_LTO_CXX_FLAGS "" CACHE STRING "" FORCE)
